<?php


namespace ModulesGarden\Servers\DigitalOceanDroplets\App\UI\Backups\Pages;


use ModulesGarden\Servers\DigitalOceanDroplets\App\Libs\DigitalOceanDroplets\Adapters\Client;
use ModulesGarden\Servers\DigitalOceanDroplets\App\Libs\DigitalOceanDroplets\Api;
use ModulesGarden\Servers\DigitalOceanDroplets\App\UI\Backups\Helpers\BackupsManager;
use ModulesGarden\Servers\DigitalOceanDroplets\Core\Helper\Lang;
use ModulesGarden\Servers\DigitalOceanDroplets\Core\UI\Builder\BaseContainer;
use ModulesGarden\Servers\DigitalOceanDroplets\Core\UI\Helpers\AlertTypesConstants;
use ModulesGarden\Servers\DigitalOceanDroplets\Core\UI\Interfaces\ClientArea;
use ModulesGarden\Servers\DigitalOceanDroplets\Core\UI\Traits\Alerts;
use ModulesGarden\Servers\DigitalOceanDroplets\Core\UI\Traits\WhmcsParams;

class Description extends BaseContainer implements ClientArea
{
    use Alerts;
    use WhmcsParams;

    protected $id    = 'description';
    protected $name  = 'description';
    protected $title = 'description';
    protected $description;

    public function __construct($baseId = null)
    {
        parent::__construct($baseId);
    }

    public function getHtml()
    {
        $backupTime = (new BackupsManager($this->whmcsParams))->getBackupTime();

        Lang::getInstance()->addReplacementConstant('from', $backupTime['start']);
        Lang::getInstance()->addReplacementConstant('to', $backupTime['stop']);
        $this->addInternalAllert('description', AlertTypesConstants::INFO);

        return parent::getHtml(); // TODO: Change the autogenerated stub
    }
}